plugins {
    id 'org.springframework.boot' version '2.4.12'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'uk.gov.hmcts'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'

    implementation project(':rse-cft-lib')

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
}

test {
    useJUnitPlatform()
}


def userProfile = project.configurations.detachedConfiguration(
        project.dependencies.create(project(':runtime')),
        project.dependencies.create('uk.gov.hmcts.ccd:user-profile-api-lib:1.2.0-SNAPSHOT'),
)

def file = layout.buildDirectory.file('manifest')

task writeManifest(dependsOn: gradle.includedBuild('ccd-user-profile-api').task(':publishToMavenLocal')) {
    outputs.file(file)
    doLast {
        def f = file.get().asFile
        f.delete()
        f.createNewFile()
        userProfile.resolvedConfiguration.files.each {
            f << it.path << '\n'
        }
    }
}
writeManifest.dependsOn(':runtime:assemble')

def lib = project.configurations.detachedConfiguration(
        project.dependencies.create(project(':rse-cft-lib')),
)

task runUp(type:JavaExec, dependsOn: [writeManifest]) {
    classpath lib
    mainClass = 'uk.gov.hmcts.rse.ccd.lib.LibRunner'
    args file.get().asFile.path
    environment('USER_PROFILE_DB_PORT', 6432)
    environment('USER_PROFILE_DB_USERNAME', 'postgres')
    environment('USER_PROFILE_DB_PASSWORD', 'postgres')
    environment('USER_PROFILE_DB_NAME', 'userprofile')
    environment('APPINSIGHTS_INSTRUMENTATIONKEY', 'key')
}

tasks.test.dependsOn(runUp)
